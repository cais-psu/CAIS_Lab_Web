name: update-citations
run-name: update citations

on:
  # 可被其它工作流复用
  workflow_call:
    inputs:
      open-pr:
        type: boolean
    outputs:
      changed:
        value: ${{ jobs.update-citations.outputs.changed }}
  # 手动触发
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

# 顶层 env（保险层 1）
env:
  FORCE_COLOR: true
  GOOGLE_SCHOLAR_API_KEY: ${{ secrets.GOOGLE_SCHOLAR_API_KEY }}

jobs:
  update-citations:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    # 如果你的 Secret 存在某个 Environment（例如 production），
    # ⭐ 把下面这一行改成那个环境名；不是的话也可以留着不影响：
    environment: production

    # job 级 env（保险层 2）
    env:
      GOOGLE_SCHOLAR_API_KEY: ${{ secrets.GOOGLE_SCHOLAR_API_KEY }}

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # 诊断 1：secrets 上下文在“模板解析期”是否可见（不能打印值，但能判断非空）
      - name: Diagnose secrets context visibility
        run: |
          if [ -n "${{ secrets.GOOGLE_SCHOLAR_API_KEY }}" ]; then
            echo "secrets.GOOGLE_SCHOLAR_API_KEY is present in context (masked)."
          else
            echo "::error::secrets.GOOGLE_SCHOLAR_API_KEY is EMPTY in context (caller likely missing 'secrets: inherit' or wrong scope)."
            # 不直接退出，因为下面还有环境变量层面的自检
          fi

      # 诊断 2：运行时 env 是否真的有这个变量
      - name: Diagnose runtime env visibility
        run: |
          if [ -n "$GOOGLE_SCHOLAR_API_KEY" ]; then
            echo "RUNTIME ENV has GOOGLE_SCHOLAR_API_KEY."
          else
            echo "::error::RUNTIME ENV missing GOOGLE_SCHOLAR_API_KEY."
            echo "HINTS:"
            echo " - If this workflow is called via 'uses:', caller must set 'secrets: inherit'."
            echo " - If your secret is stored under an Environment, ensure 'environment: <name>' is set on this job."
            echo " - Fork PRs cannot access secrets."
            exit 2
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: "**/requirements.txt"

      - name: Install Python packages
        run: python -m pip install --upgrade --requirement ./_cite/requirements.txt

      # 真正执行：step 级 env（保险层 3）
      - name: Build updated citations
        env:
          GOOGLE_SCHOLAR_API_KEY: ${{ secrets.GOOGLE_SCHOLAR_API_KEY }}
        run: |
          python _cite/cite.py
        timeout-minutes: 15

      - name: Check if citations changed
        id: changed
        uses: tj-actions/verify-changed-files@v18
        with:
          files: |
            _data/citations.yaml

      - name: Commit updated citations to branch
        if: |
          steps.changed.outputs.files_changed == 'true' &&
          inputs.open-pr != true
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update citations"

      - name: Open pull request with updated citations
        if: |
          steps.changed.outputs.files_changed == 'true' &&
          inputs.open-pr == true
        uses: peter-evans/create-pull-request@v6
        with:
          branch: citation-update
          title: Periodic citation update
          body: |
            To see a live preview of this PR, close (don't merge) and reopen it.

    outputs:
      changed: ${{ steps.changed.outputs.files_changed || false }}
