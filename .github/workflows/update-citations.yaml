name: update-citations
run-name: update citations

on:
  workflow_call:
    inputs:
      open-pr:
        type: boolean
    outputs:
      changed:
        value: ${{ jobs.update-citations.outputs.changed }}
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

env:
  FORCE_COLOR: true
  GOOGLE_SCHOLAR_API_KEY: ${{ secrets.GOOGLE_SCHOLAR_API_KEY }}

jobs:
  update-citations:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
      pull-requests: write
    concurrency:
      group: update-citations-${{ github.ref }}
      cancel-in-progress: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: "**/requirements.txt"

      - name: Install cite deps
        run: |
          python -m pip install --upgrade --requirement ./_cite/requirements.txt
          python -m pip install --upgrade pyyaml

      - name: Build updated citations
        env:
          GOOGLE_SCHOLAR_API_KEY: ${{ secrets.GOOGLE_SCHOLAR_API_KEY }}
        run: python _cite/cite.py
        timeout-minutes: 15

      - name: Postprocess citations (lowercase DOI & dedupe)
        run: |
          python - <<'PY'
          import yaml
          p = "_data/citations.yaml"
          data = yaml.safe_load(open(p, "r", encoding="utf-8")) or []
          seen = set()
          out = []
          for it in data:
              doi = (it.get("DOI") or it.get("doi") or "").strip()
              if doi:
                  doi_low = doi.lower()
                  it["DOI"] = doi_low
                  it["doi"] = doi_low
                  key = f"doi:{doi_low}"
              else:
                  key = (it.get("id") or it.get("title") or "").strip().lower()
              if key and key in seen:
                  continue
              seen.add(key)
              out.append(it)
          yaml.safe_dump(out, open(p, "w", encoding="utf-8"), sort_keys=False, allow_unicode=True)
          print(f"kept {len(out)} of {len(data)}")
          PY

      - name: Check if citations changed
        id: changed
        uses: tj-actions/verify-changed-files@v18
        with:
          files: |
            _data/citations.yaml

      - name: Commit updated citations to branch
        if: |
          steps.changed.outputs.files_changed == 'true' &&
          inputs.open-pr != true
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update citations"
          file_pattern: |
            _data/citations.yaml

      - name: Open pull request with updated citations
        if: |
          steps.changed.outputs.files_changed == 'true' &&
          inputs.open-pr == true
        uses: peter-evans/create-pull-request@v6
        with:
          branch: citation-update
          title: Periodic citation update
          body: |
            Auto update citations.

    outputs:
      changed: ${{ steps.changed.outputs.files_changed || false }}
